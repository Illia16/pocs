AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  testFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: test.handler
      Runtime: nodejs20.x
      Events:
        testEvent:
          Type: Api
          Properties:
            Path: /test
            Method: post
            Cors:
              AllowMethods: "'POST,OPTIONS'"
              AllowHeaders: "'Content-Type,Authorization'"
              AllowOrigin: "'http://localhost:3000'"
              AllowCredentials: true
        testOptionsEvent:
          Type: Api
          Properties:
            Path: /test
            Method: options
            Cors:
              AllowMethods: "'POST,OPTIONS'"
              AllowHeaders: "'Content-Type,Authorization'"
              AllowOrigin: "'http://localhost:3000'"
              AllowCredentials: true
  GoogleAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: google_auth.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          GOOGLE_CLIENT_ID: !Ref GoogleClientId
          JWT_SECRET: !Ref JwtSecret
      Events:
        GoogleAuthEvent:
          Type: Api
          Properties:
            Path: /auth/google
            Method: post
            Cors:
              AllowMethods: "'POST,OPTIONS'"
              AllowHeaders: "'Content-Type,Authorization'"
              AllowOrigin: "'http://localhost:3000'"
              AllowCredentials: true
        GoogleAuthOptionsEvent:
          Type: Api
          Properties:
            Path: /auth/google
            Method: options
            Cors:
              AllowMethods: "'POST,OPTIONS'"
              AllowHeaders: "'Content-Type,Authorization'"
              AllowOrigin: "'http://localhost:3000'"
              AllowCredentials: true
        VerifyAuthEvent:
          Type: Api
          Properties:
            Path: /auth/verify
            Method: post
            Cors:
              AllowMethods: "'POST,OPTIONS'"
              AllowHeaders: "'Content-Type,Authorization'"
              AllowOrigin: "'http://localhost:3000'"
              AllowCredentials: true
        VerifyAuthOptionsEvent:
          Type: Api
          Properties:
            Path: /auth/verify
            Method: options
            Cors:
              AllowMethods: "'POST,OPTIONS'"
              AllowHeaders: "'Content-Type,Authorization'"
              AllowOrigin: "'http://localhost:3000'"
              AllowCredentials: true

Parameters:
  GoogleClientId:
    Type: String
    Description: Google OAuth Client ID
  JwtSecret:
    Type: String
    Description: Secret key for JWT signing
    NoEcho: true